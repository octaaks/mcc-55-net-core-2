#pragma checksum "F:\OAX\DOC\_Project\mcc-55-net-core-2\ImplementCors\Views\Persons\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4efdca3abb4541e3eba621a7d2fe783596002415"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Persons_Index), @"mvc.1.0.view", @"/Views/Persons/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\OAX\DOC\_Project\mcc-55-net-core-2\ImplementCors\Views\_ViewImports.cshtml"
using ImplementCors;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\OAX\DOC\_Project\mcc-55-net-core-2\ImplementCors\Views\_ViewImports.cshtml"
using ImplementCors.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4efdca3abb4541e3eba621a7d2fe783596002415", @"/Views/Persons/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f43793de8ec3e89ecacd12908e57073eb5edd501", @"/Views/_ViewImports.cshtml")]
    public class Views_Persons_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/fontawesome/css/all.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/persons.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("contactform"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("needs-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "F:\OAX\DOC\_Project\mcc-55-net-core-2\ImplementCors\Views\Persons\Index.cshtml"
  
    Layout = (string)ViewData["Layout"] ?? "_LayoutAdmin";
    ViewData["Title"] = "Persons API";

#line default
#line hidden
#nullable disable
            WriteLiteral("<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4efdca3abb4541e3eba621a7d2fe7835960024156341", async() => {
                WriteLiteral("\r\n    <title>Title</title>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4efdca3abb4541e3eba621a7d2fe7835960024156631", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(" <!--load all styles -->\r\n    <!-- CSS Boostrap -->\r\n");
                WriteLiteral("    <!-- CSS Bootstrap Datepicker -->\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.css\">\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "4efdca3abb4541e3eba621a7d2fe7835960024158076", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css\">\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4efdca3abb4541e3eba621a7d2fe78359600241510179", async() => {
                WriteLiteral(@"
    <div class=""container"">
        <div class=""row"">
            <div class=""col"">
                <h3 id=""judul"" style=""font-family: HACKED; text-align:start;"">Persons api</h3>
            </div>
            <div class=""col"">
                <button class=""btn btn-primary ml-3"" style=""float:right"" data-bs-toggle=""modal"" data-bs-target=""#registerModal"">Register <i class=""fas fa-plus ml-2""></i></button>
                <button class=""btn btn-secondary"" style=""float:right"" id=""reloadBtn"">Reload <i class=""fas fa-sync-alt ml-2""></i></button>
            </div>
        </div>

        <table id=""example"" class=""display nowrap"" style=""width:100%"">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Position</th>
                    <th>Office</th>
                    <th>Age</th>
                    <th>Start date</th>
                    <th>Salary</th>
                </tr>
            </thead>
            <tbody>
                <tr>
     ");
                WriteLiteral(@"               <td>Tiger Nixon</td>
                    <td>System Architect</td>
                    <td>Edinburgh</td>
                    <td>61</td>
                    <td>2011/04/25</td>
                    <td>$320,800</td>
                </tr>
                <tr>
                    <td>Garrett Winters</td>
                    <td>Accountant</td>
                    <td>Tokyo</td>
                    <td>63</td>
                    <td>2011/07/25</td>
                    <td>$170,750</td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <th>Name</th>
                    <th>Position</th>
                    <th>Office</th>
                    <th>Age</th>
                    <th>Start date</th>
                    <th>Salary</th>
                </tr>
            </tfoot>
        </table>

        <div class=""card shadow p-3 mt-3 p-lg-3"">
            <table id=""table_id"" class=""display nowrap"" style=""width:100%"">
  ");
                WriteLiteral(@"              <thead>
                    <tr>
                        <th>NO</th>
                        <th>NIK</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Gender</th>
                        <th>Phone</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>

");
                WriteLiteral(@"        </div>

        <!-- Modal 1-->
        <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""exampleModalLabel"">Modal title</h5>
                        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
                    </div>
                    <div id=""modal-content"" class=""modal-body"">
                        <div class=""row"">
                            <div class=""col-4 pl-5 font-weight-bold"">
                                <div>NIK</div>
                                <div>Name</div>
                                <div>Gender</div>
                                <div>Email</div>
                                <div>Phone</div>
                                <div>BirthD");
                WriteLiteral(@"ate</div>
                                <div>Salary</div>

                                <div>University</div>
                                <div>Degree</div>
                                <div>GPA</div>

                                <div>Roles</div>
                            </div>
                            <div class=""col-1"">
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                                <div>:</div>
                            </div>
                            <div class=""col-7"">
                                <div id=""modal-data""></div>
                 ");
                WriteLiteral("           </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
                WriteLiteral(@"                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Register-->
        <div class=""modal fade"" id=""registerModal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg modal-dialog-centered"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""exampleModalLabel"">Register</h5>
                        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
                    </div>
                    <div id=""modal-content"" class=""modal-body"">

                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4efdca3abb4541e3eba621a7d2fe78359600241516305", async() => {
                    WriteLiteral(@"

                            <div class=""form-row"">
                                <div class=""col mb-3"">
                                    <label for=""inputNik"">NIK</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputNik"" placeholder=""NIK"" aria-describedby=""inputGroupPrepend"" autocomplete=""off"" autocorrect=""off""
                                               autocapitalize=""off"" spellcheck=""false"" required>
                                        <p class=""validation-message"" id=""invalid-nik""></p>
                                        <div class=""invalid-feedback"">
                                            Please type your NIK.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""form-row"">
                                <div cl");
                    WriteLiteral("ass=\"col-md-6 mb-3\">\r\n                                    <label for=\"inputFirstName\">First name</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" placeholder=\"First name\"");
                    BeginWriteAttribute("value", " value=\"", 8471, "\"", 8479, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" required>
                                    <div class=""valid-feedback"">
                                        Looks good!
                                    </div>
                                </div>
                                <div class=""col-md-6 mb-3"">
                                    <label for=""inputLastName"">Last name</label>
                                    <input type=""text"" class=""form-control"" id=""inputLastName"" placeholder=""Last name""");
                    BeginWriteAttribute("value", " value=\"", 8956, "\"", 8964, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" required>
                                    <div class=""valid-feedback"">
                                        Looks good!
                                    </div>
                                </div>
                            </div>

                            <div class=""form-row"">
                                <div class=""col-md mb-3"">
                                    <label for=""inputEmail"">Email</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputEmail"" placeholder=""Email"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                                            Please type an email.
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md mb-3"">
                            ");
                    WriteLiteral(@"        <label for=""inputPassword"">Password</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputPassword"" placeholder=""Password"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                                            Please insert your password.
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md mb-3"">
                                    <label for=""inputPhone"">Phone</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputPhone"" placeholder=""Phone"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                           ");
                    WriteLiteral(@"                 Please type a phone number.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""form-row"">
                                <div class=""col-md mb-3"">
                                    <label for=""inputGender"">Gender</label>
                                    <div class=""input-group"">
");
                    WriteLiteral(@"
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" type=""radio"" name=""flexRadioDefault"" value=""0"" id=""inputGender1"" checked>
                                            <label class=""form-check-label"" for=""inputGender1"">
                                                Male
                                            </label>
                                        </div>
                                        <div class=""form-check ml-4"">
                                            <input class=""form-check-input"" type=""radio"" name=""flexRadioDefault"" value=""1"" id=""inputGender2"">
                                            <label class=""form-check-label"" for=""inputGender2"">
                                                Female
                                            </label>
                                        </div>
                                        <div class=""invalid-feedback"">
           ");
                    WriteLiteral(@"                                 Please insert date of birth.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""form-row"">
                                <div class=""col-md mb-3"">
                                    <label for=""inputBirthDate"">BirthDate</label>
");
                    WriteLiteral(@"                                    <div class=""input-group date"" data-provide=""datepicker"">
                                        <div class=""input-group-prepend"">
                                            <div class=""input-group-text""><i class=""fas fa-calendar-alt""></i></div>
                                        </div>
                                        <input type=""text"" class=""form-control datepicker"" data-date-format=""yyyy-mm-dd"" id=""inputBirthDate"" placeholder=""Birth Date"">
                                        <div class=""input-group-addon"">
                                            <span class=""glyphicon glyphicon-th""></span>
                                        </div>
                                        <div class=""invalid-feedback"">
                                            Please insert date of birth.
                                        </div>
                                    </div>
                                </div>
                            </div");
                    WriteLiteral(@">

                            <div class=""form-row"">
                                <div class=""col-md mb-3"">
                                    <label for=""inputSalary"">Salary</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputSalary"" placeholder=""Salary"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                                            Please insert your salary.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""form-row"">
                                <div class=""col-md mb-3"">
                                    <label for=""inputUniversity"">University</label>
                                    <div class=""input-group"">
");
                    WriteLiteral(@"                                        <select class=""custom-select my-1 mr-sm-2"" id=""inputUniversity"" placeholder=""University"" required>
                                        </select>
                                        <div class=""invalid-feedback"">
                                            Please insert university.
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md mb-3"">
                                    <label for=""inputDegree"">Degree</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputDegree"" placeholder=""Degree"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                                            Please insert your degree.
                                        </div>
 ");
                    WriteLiteral(@"                                   </div>
                                </div>
                                <div class=""col-md mb-3"">
                                    <label for=""inputGpa"">GPA</label>
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" id=""inputGpa"" placeholder=""GPA"" aria-describedby=""inputGroupPrepend"" required>
                                        <div class=""invalid-feedback"">
                                            Please insert your GPA.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""form-group mt-3"">
                                <div class=""form-check"">
                                    <input class=""form-check-input"" type=""checkbox""");
                    BeginWriteAttribute("value", " value=\"", 18228, "\"", 18236, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" id=""invalidCheck"" required>
                                    <label class=""form-check-label"" for=""invalidCheck"">
                                        Agree to terms and conditions
                                    </label>
                                    <div class=""invalid-feedback"">
                                        You must agree before submitting.
                                    </div>
                                </div>
                            </div>
");
                    WriteLiteral("                            <button id=\"register\" type=\"submit\" class=\"btn btn-primary\">Submit form</button>\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n");
                WriteLiteral("                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</html>
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js""></script>
<script src=""https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js""></script>
<script src=""https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js""></script>
<script src=""https://cdn.datatables.net/buttons/1.5.6/js/buttons.flash.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js""></script>
<script src=""https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js""></script>
<script src=""https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js""></script>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.js""></script>
<script>
    $('.datepicker').datepicker({
        format: 'yyyy-mm-dd'
");
            WriteLiteral(@"    });

    //DATATABLEs
    var mt = $('#table_id').DataTable({
        ""columnDefs"": [{
            ""targets"": 0,
            ""searchable"": false,
            ""orderable"": false
        }],
        ""order"": [[1, 'asc']],
        ""filter"": true,
        ""ajax"": {
            ""url"": ""https://localhost:44300/api/persons/getperson"",
            ""datatype"": ""json"",
            ""dataSrc"": ""result""
        },
        ""columns"": [
            { ""data"": null },
            { ""data"": ""nik"" },
            { ""data"": ""fullName"" },
            { ""data"": ""email"" },
            {
                ""data"": ""gender"",
                ""render"": function (data, type, row) {
                    if (data == ""Male"") {
                        return data + ' <i class=""fas fa-mars""></i>';
                    } else {
                        return data + ' <i class=""fas fa-venus""></i>';
                    }
                }
            },
            {
                ""data"": ""phone"",
              ");
            WriteLiteral(@"  ""render"": function (data, type, row) {

                    return '(+62)' + data.slice(1, 99);
                },
                ""autoWidth"": true
            },
            {
                ""data"": ""nik"",
                ""render"": function (data, type, row) {

                    return '<button class=""btn btn-primary mr-1"" onclick=""show(' + data + ')"" data-bs-toggle=""modal"" data-bs-target=""#exampleModal""> Details </button><button class=""btn btn-danger"" onclick=""deletePerson(' + data + ')""> Delete </button>';
                },
                ""autoWidth"": true
            }
        ],
        buttons: [
            {
                extend: 'excelHtml5',
                exportOptions: {
                    columns: [1]
                },
                className: 'btn btn-sm btn-outline-secondary',
                bom: true
            },
            {
                extend: 'pdfHtml5',
                exportOptions: {
                    columns: [1]
                },
 ");
            WriteLiteral(@"               className: 'btn btn-sm btn-outline-secondary',
                bom: true
            },
        ]
    });

    mt.on('order.dt search.dt', function () {
        mt.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            cell.innerHTML = i + 1;
        });
    }).draw();

    $(document).ready(function () {

        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');

                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkVal");
            WriteLiteral(@"idity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();


        $(""#register"").click(function (event) {


            event.preventDefault();

            var fields = [
                document.getElementsByTagName(""input"")
            ];

            for (var i = 0; i < fields.length; i++) {
                if (fields[i].value == """") {
                    fields[i].placeholder == ""Tidak boleh kosong""
                    console.log(fields[i].placeholder);
                }
            };

            //var data = $('.form-data').serialize();
            var nik = document.getElementById(""inputNik"").value;
            //if (nik == """") {
            //    $('#invalid-nik').html('Please insert your NIK!');
            //}
            va");
            WriteLiteral(@"r firstName = document.getElementById(""inputFirstName"").value;
            var lastName = document.getElementById(""inputLastName"").value;
            var email = document.getElementById(""inputEmail"").value;
            var password = document.getElementById(""inputPassword"").value;
            var phone = document.getElementById(""inputPhone"").value;

            var genders = document.getElementsByName(""flexRadioDefault"");
            for (var i = 0; i < genders.length; i++) {
                if (genders[i].checked) {
                    var gender = genders[i].value;
                }
            }
            console.log(""gender: "" + gender);

            var phone = document.getElementById(""inputPhone"").value;
            //var birthDate = ""1911-11-11T00:00:00"";
            var birthDate = document.getElementById(""inputBirthDate"").value;
            var salary = document.getElementById(""inputSalary"").value;
            var university = document.getElementById(""inputUniversity"").value;
   ");
            WriteLiteral(@"         var degree = document.getElementById(""inputDegree"").value;
            var gpa = document.getElementById(""inputGpa"").value;

            var dataInput = {
                ""nik"": nik,
                ""firstName"": firstName,
                ""lastName"": lastName,
                ""phone"": phone,
                ""birthDate"": birthDate,
                ""gender"": parseInt(gender),
                ""salary"": parseInt(salary),
                ""email"": email,
                ""password"": password,
                ""degree"": degree,
                ""GPA"": gpa,
                ""UniversityId"": parseInt(university)
            };

            var json = JSON.stringify(dataInput);
            console.log(json);

            $.ajax({
                url: 'https://localhost:44300/api/persons/register',
                method: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(dataInput),
                success: funct");
            WriteLiteral(@"ion (data) {
                    console.log(data);

                    $('#contactform')[0].reset();
                    $('#registerModal').modal('toggle');

                    Swal.fire(
                        'Good job!',
                        'You clicked the button!',
                        'success'
                    );
                    mt.ajax.reload(function (json) {
                        $('#table_id').val(json.lastInput);
                    });
                    //location.reload();
                },
                error: function (xhr, status, error) {
                    var err = eval(xhr.responseJSON);
                    console.log(err.message);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                        //footer: '<a href="""">Why do I have this issue?</a>'
                    });
                    //document.getElement");
            WriteLiteral(@"ById(""inputUniversity"").className = ""form-control is-invalid"";
                    //$(""#messageUniv"").html(` ${err.errors.Name[0]}`);
                }
            });
        });

        //reload button
        $(""#reloadBtn"").click(function () {
            mt.ajax.reload(function (json) {
                $('#table_id').val(json.lastInput);
            });
        });

        //get all university
        $.ajax({
            url: ""https://localhost:44300/api/universities/""
        }).done((result) => {
            var text = """";
            console.log(result);
            $.each(result.data, function (key, val) {
                text += `
                <option value=""${val.universityId}"">${val.name}</option>
            `
            });
            $(""#inputUniversity"").html(text);
        }).fail((result) => {
            console.log(result);
        });

        $.ajax({
            url: ""https://localhost:44300/api/persons/getperson""
        }).done((result) => {
  ");
            WriteLiteral(@"          console.log(result);
        }).fail((result) => {
            console.log(result);
        });

        $(document).ready(function () {
            $('#test').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            });
        });
    });

    //show char info
    function show(nik) {
        $.ajax({
            url: ""https://localhost:44300/api/persons/"" + nik
        }).done((result) => {

            var roles = """";
            console.log(result);

            for (let i = 0; i < result.data.account.accountRoles.length; i++) {
                roles += `<li>${result.data.account.accountRoles[i].role.name}</li>`;
            }

            var genderIcon = """";
            if (result.data.gender == ""Male"") {
                genderIcon = ' <i class=""fas fa-mars""></i>';
            } else {
                genderIcon = ' <i class=""fas fa-venus""></i>';
            }");
            WriteLiteral(@"

            var text = """";
            text += `
            <div>${result.data.nik}</div>
            <div>${result.data.firstName + "" "" + result.data.lastName}</div>
            <div>${result.data.gender} ${genderIcon}</div>
            <div>${result.data.email}</div>
            <div>(+62)${result.data.phone.slice(1, 99)}</div>
            <div>${moment(result.data.birthDate).format(""dddd, MMMM Do YYYY"")}</div>
            <div>Rp. ${result.data.salary.toLocaleString('it-IT')}</div>
            <div>${result.data.account.profiling.educations.universities.name}</div>
            <div>${result.data.account.profiling.educations.degree}</div>
            <div>${result.data.account.profiling.educations.gpa}</div>
            <div><ul>${roles}</ul></div>
        `
            $(""#modal-data"").html(text);
            $(""#exampleModalLabel"").html(result.data.firstName + "" "" + result.data.lastName + ""'s Profile"");
        }).fail((result) => {
            console.log(result);
        });
    ");
            WriteLiteral(@"}

    //delete char
    function deletePerson(nik) {
        Swal.fire({
            title: 'Are you sure?',
            text: ""You won't be able to revert this!"",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {

                $.ajax({
                    url: 'https://localhost:44300/api/persons/' + nik,
                    method: 'DELETE',
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function () {
                    },
                    error: function (xhr, status, error) {
                        var err = eval(xhr.responseJSON);
                        console.log(err.message);
                    }
                });

  ");
            WriteLiteral(@"              Swal.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success'
                )

                mt.ajax.reload(function (json) {
                    $('#table_id').val(json.lastInput);
                });
            }
        })

    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
